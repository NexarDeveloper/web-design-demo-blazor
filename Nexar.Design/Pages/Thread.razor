@page "/thread"
@inherits AbstractPage
@implements IDisposable
@inject NexarClient Client

@if (AppData.CurrentThread != null)
{
    <MudContainer>
        <MudText Typo="Typo.h4" GutterBottom="true">Comments</MudText>
        @if (AppData.CurrentThread.Tag.OriginalStateScreenshotUrl != null)
        {
            <MudField Label="Original screenshot" Variant="Variant.Outlined">
                <MudLink Href="@AppData.CurrentThread.Tag.OriginalStateScreenshotUrl" Target="_blank">
                    <img src="@AppData.CurrentThread.Tag.OriginalStateScreenshotUrl" alt="Preview" width="128" height="128" />
                </MudLink>
            </MudField>
        }
        @foreach (var comment in AppData.CurrentThread.Tag.Comments)
        {
            <MudCard Outlined="true">
                <MudCardContent>
                    <MudText Typo="Typo.body2"><b>From:</b> @comment.CreatedBy.Email</MudText>
                    <MudTextFieldString Text="@comment.Text" Lines="@(CountRows(comment.Text))" ReadOnly="true" />
                </MudCardContent>
            </MudCard>
        }
    </MudContainer>
}

@code {
    protected override void OnInitialized()
    {
        AppData.OnChangeThread += Update;
    }

    public void Dispose()
    {
        AppData.OnChangeThread -= Update;
    }

    void Update()
    {
        StateHasChanged();
    }

    static int CountRows(string text)
    {
        int n = 2;
        foreach (var c in text)
            if (c == '\n')
                ++n;
        return n;
    }
}
