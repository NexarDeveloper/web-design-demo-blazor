@page "/project"
@inherits AbstractPage
@implements IDisposable
@using Nexar.Design

@if (AppData.CurrentProject != null)
{
    <MudContainer>
        <MudText Typo="Typo.h4" GutterBottom="true">Project</MudText>
        <MudTextField T="string" Label="Name" Text="@AppData.CurrentProject.Text" ReadOnly="true" Variant="Variant.Outlined" />
        <MudField Label="URL" Variant="Variant.Outlined">
            <MudLink Href="@AppData.CurrentProject.Tag.Url.ToString()" Target="_blank">@AppData.CurrentProject.Tag.Url</MudLink>
        </MudField>
        <MudField Label="Preview" Variant="Variant.Outlined">
            <img src="@AppData.CurrentProject.Tag.PreviewUrl" alt="Preview" width="128" height="128" />
        </MudField>
        <MudTable Items="@AppData.CurrentProject.Tag.Parameters">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Parameters</MudText>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Value</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Value">@context.Value</MudTd>
            </RowTemplate>
        </MudTable>
    </MudContainer>
}

@code {
    protected override void OnInitialized()
    {
        AppData.OnChangeProject += Update;
    }

    public void Dispose()
    {
        AppData.OnChangeProject -= Update;
    }

    void Update()
    {
        StateHasChanged();
    }
}
