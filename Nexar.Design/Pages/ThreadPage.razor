@page "/thread"
@inherits AbstractPage
@implements IDisposable

@if (ThreadItem.Current != null)
{
    <ItemPageHeader Text="Thread" Item=@ThreadItem.Current />

    <TextFieldCopy Label="CommentThreadId" Text="@ThreadItem.Current.Tag.CommentThreadId" />

    @if (ThreadItem.Current.Tag.OriginalStateScreenshotUrl != null)
    {
        <MudField Label="Original screenshot" Variant="Variant.Outlined">
            <MudLink Href="@ThreadItem.Current.Tag.OriginalStateScreenshotUrl" Target="_blank">
                <MudImage Src=@ThreadItem.Current.Tag.OriginalStateScreenshotUrl Width=128 Height=128 />
            </MudLink>
        </MudField>
    }

    @foreach (var comment in ThreadItem.Current.Tag.Comments)
    {
        <MudCard Outlined="true">
            <MudCardContent>
                <MudText Typo="Typo.body2"><b>From:</b> @comment.CreatedBy.Email</MudText>
                <MudTextField T="string" Text="@comment.Text" Lines="@(CountLines(comment.Text))" ReadOnly="true" />
            </MudCardContent>
        </MudCard>
    }
}

@code {
    protected override void OnInitialized()
    {
        ThreadItem.OnChange += Update;
    }

    public void Dispose()
    {
        ThreadItem.OnChange -= Update;
    }

    void Update()
    {
        StateHasChanged();
    }
}
