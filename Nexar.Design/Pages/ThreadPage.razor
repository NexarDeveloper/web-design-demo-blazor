@page "/thread"
@inherits AbstractPage

@if (ThreadItem.Current != null)
{
    <ItemPageHeader Text="Thread" Item=@ThreadItem.Current />

    <TextFieldCopy Label="CommentThreadId" Text=@ThreadItem.Current.Tag.CommentThreadId />

    @if (ThreadItem.Current.Tag.OriginalStateScreenshotUrl is not null)
    {
        <MudField Label="Original screenshot" Variant=Variant.Outlined>
            <MudLink Href=@ThreadItem.Current.Tag.OriginalStateScreenshotUrl Target="_blank">
                <MudImage Src=@ThreadItem.Current.Tag.OriginalStateScreenshotUrl Width=128 Height=128 />
            </MudLink>
        </MudField>
    }

    @foreach (var comment in ThreadItem.Current.Tag.Comments)
    {
        <MudCard Outlined="true">
            <MudCardContent>
                <MudText Typo=Typo.body2><b>CommentId:</b> @comment.CommentId</MudText>
                <MudText Typo=Typo.body2><b>CreatedBy:</b> @comment.CreatedBy.UserId / @comment.CreatedBy.Email</MudText>
                <MudTextField T="string" Text=@comment.Text Lines=@(CountLines(comment.Text)) ReadOnly=true />
            </MudCardContent>
        </MudCard>
    }
}

@code {
    protected override void OnInitialized()
    {
        ThreadItem.OnChange += StateHasChanged;
    }

    protected override void Disposing()
    {
        ThreadItem.OnChange -= StateHasChanged;
    }
}
