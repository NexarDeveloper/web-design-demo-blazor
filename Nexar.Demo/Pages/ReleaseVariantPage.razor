@page "/ReleaseVariant"
@inherits AbstractPage
@using Data = ReleaseVariantItem

<ItemPageHeader Text="Release Variant" Item=@Data.Current />

@if (Data.Current is not null)
{
    <TextField Label="Name" Text=@Data.Current.Tag.Name />

    <br />
    <MudTable Items=@Downloads() Dense=true>
        <ToolBarContent>
            <MudText Typo=Typo.h6>PCB Fabrication</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Package</MudTh>
            <MudTh>Download</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Package">@context.Item1</MudTd>
            <MudTd DataLabel="Download">
                <MudLink Href=@context.Item3>@context.Item2</MudLink>
            </MudTd>
        </RowTemplate>
    </MudTable>

    <br />
    <AlertGraphQL Files="Project.Releases.graphql Project.ReleaseById.graphql" />
}

@code {
    protected override void OnInitialized()
    {
        Data.OnChange += StateHasChanged;
    }

    protected override void Disposing()
    {
        Data.OnChange -= StateHasChanged;
    }

    (string, string, string)[] Downloads()
    {
        var fabrication = Data.Current.Tag.PcbFabrication;
        return new (string, string, string)[]
        {
            ("Full", fabrication.PackageName, fabrication.DownloadUrl),
            ("ODB", fabrication.Odb.PackageName, fabrication.Odb.DownloadUrl),
            ("IPC2581", fabrication.Ipc2581.PackageName, fabrication.Ipc2581.DownloadUrl),
            ("Gerber", fabrication.Gerber.PackageName, fabrication.Gerber.DownloadUrl),
            ("GerberX2", fabrication.GerberX2.PackageName, fabrication.GerberX2.DownloadUrl),
            ("NC Drill", fabrication.NcDrill.PackageName, fabrication.NcDrill.DownloadUrl),
            ("Test Points", fabrication.TestPoints.PackageName, fabrication.TestPoints.DownloadUrl),
        };
    }
}
