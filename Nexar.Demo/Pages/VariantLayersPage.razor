@page "/VariantLayers"
@inherits AbstractPage
@using Nexar.Client
@using Data = VariantLayersItem

@if (Data.Current is null)
    return;

<ItemPageHeader Text="Layers" Item=@Data.Current />

@if (Data.Current.IsUpdating)
{
    <MudProgressLinear Indeterminate=true />
    return;
}

@if (Data.Current.Tag is not null)
{
    <TextField Label="StackupType" Text=@Data.Current.Tag.StackupType />

    <TextField Label="RoughnessType" Text=@Data.Current.Tag.RoughnessType />

    <TextField Label="RoughnessFactorSR" Text=@Data.Current.Tag.RoughnessFactorSR />

    <TextField Label="RoughnessFactorRF" Text=@Data.Current.Tag.RoughnessFactorRF />

    @foreach (var stack in Data.Current.Tag.Stacks.Cast<IMyStack>())
    {
        <br />
        <MudTable Items=@stack.Layers Dense=true>
            <ToolBarContent>
                <MudText Typo=Typo.h6>@(stack.Name ?? "Layers")</MudText>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>LayerType</MudTh>
                    <MudTh>Material</MudTh>
                    <MudTh>Thickness</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name">@context.Name</MudTd>
                    <MudTd DataLabel="LayerType">@context.LayerType</MudTd>
                    <MudTd DataLabel="Material">@context.Material</MudTd>
                    <MudTd DataLabel="Thickness">@context.Thickness?.X</MudTd>
                </RowTemplate>
            </MudTable>
    }
}

<br />
<AlertGraphQL Files="Variant.Layers.graphql Project.Variants.graphql" />

@code {
    protected override void OnInitialized()
    {
        Data.OnChange += StateHasChanged;
    }

    protected override void Disposing()
    {
        Data.OnChange -= StateHasChanged;
    }
}
