@page "/VariantPcb"
@inherits AbstractPage
@using Data = VariantPcbItem

<ItemPageHeader Text="PCB" Item=@Data.Current />

@if (Data.Current?.Tag is not null)
{
    <TextField Label="DocumentId" Text=@Data.Current.Tag.DocumentId />

    <TextField Label="DesignItems.TotalCount" Text=@Data.Current.Tag.DesignItems.TotalCount.ToString() />

    @if (Data.Current.Tag.DesignItems.TotalCount > Data.ItemsLimit)
    {
        <MudAlert Severity="Severity.Warning">
            Limited to the first @(Data.ItemsLimit) items.
        </MudAlert>
    }

    <br />
    <MudTable Items=@Data.Current.Tag.DesignItems.Nodes Dense=true>
        <HeaderContent>
            <MudTh>Component.Name</MudTh>
            <MudTh>Designator</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Value">@context.Component?.Name</MudTd>
            <MudTd DataLabel="Name">@context.Designator</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

    <br />
    <AlertGraphQL Files="Project.Variants.graphql Variant.Pcb.graphql" />
}
else
{
    <MudProgressLinear Indeterminate=true />
}

@code {
    protected override void OnInitialized()
    {
        Data.OnChange += StateHasChanged;
    }

    protected override void Disposing()
    {
        Data.OnChange -= StateHasChanged;
    }
}
