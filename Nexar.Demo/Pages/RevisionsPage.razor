@page "/Revisions"
@inherits AbstractPage
@using Data = ProjectRevisionsItem

<ItemPageHeader Text="Revisions" Item=@Data.Current />

@if (Data.Current is not null)
{
    @if (Data.Current.Revisions is null)
    {
        <MudProgressLinear Indeterminate=true />
    }
    else if (Data.Current.Revisions.Count > 0)
    {
        <MudTable Items=@Data.Current.Revisions>
            <HeaderContent>
                <MudTh>CreatedAt</MudTh>
                <MudTh>Author</MudTh>
                <MudTh>Message</MudTh>
                <MudTh>RevisionId</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="CreatedAt">@context.CreatedAt</MudTd>
                <MudTd DataLabel="Author">@context.Author</MudTd>
                <MudTd DataLabel="Message">@context.Message</MudTd>
                <MudTd DataLabel="RevisionId">@context.RevisionId</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>

        <br />
        <AlertGraphQL Files="Project.Revisions.graphql" />
    }
}

@code {
    protected override void OnInitialized()
    {
        Data.OnChange += StateHasChanged;
    }

    protected override void Disposing()
    {
        Data.OnChange -= StateHasChanged;
    }
}
